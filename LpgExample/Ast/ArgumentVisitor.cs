namespace LpgExample.Ast
{

public interface ArgumentVisitor
{
    void visit(ASTNodeToken n, object o);
    void visit(LPG n, object o);
    void visit(LPG_itemList n, object o);
    void visit(AliasSeg n, object o);
    void visit(AstSeg n, object o);
    void visit(DefineSeg n, object o);
    void visit(EofSeg n, object o);
    void visit(EolSeg n, object o);
    void visit(ErrorSeg n, object o);
    void visit(ExportSeg n, object o);
    void visit(GlobalsSeg n, object o);
    void visit(HeadersSeg n, object o);
    void visit(IdentifierSeg n, object o);
    void visit(ImportSeg n, object o);
    void visit(IncludeSeg n, object o);
    void visit(KeywordsSeg n, object o);
    void visit(NamesSeg n, object o);
    void visit(NoticeSeg n, object o);
    void visit(RulesSeg n, object o);
    void visit(SoftKeywordsSeg n, object o);
    void visit(StartSeg n, object o);
    void visit(TerminalsSeg n, object o);
    void visit(TrailersSeg n, object o);
    void visit(TypesSeg n, object o);
    void visit(RecoverSeg n, object o);
    void visit(PredecessorSeg n, object o);
    void visit(option_specList n, object o);
    void visit(option_spec n, object o);
    void visit(optionList n, object o);
    void visit(option n, object o);
    void visit(SYMBOLList n, object o);
    void visit(aliasSpecList n, object o);
    void visit(alias_lhs_macro_name n, object o);
    void visit(defineSpecList n, object o);
    void visit(defineSpec n, object o);
    void visit(macro_segment n, object o);
    void visit(terminal_symbolList n, object o);
    void visit(action_segmentList n, object o);
    void visit(import_segment n, object o);
    void visit(drop_commandList n, object o);
    void visit(drop_ruleList n, object o);
    void visit(drop_rule n, object o);
    void visit(optMacroName n, object o);
    void visit(include_segment n, object o);
    void visit(keywordSpecList n, object o);
    void visit(keywordSpec n, object o);
    void visit(nameSpecList n, object o);
    void visit(nameSpec n, object o);
    void visit(rules_segment n, object o);
    void visit(nonTermList n, object o);
    void visit(nonTerm n, object o);
    void visit(RuleName n, object o);
    void visit(ruleList n, object o);
    void visit(rule n, object o);
    void visit(symWithAttrsList n, object o);
    void visit(symAttrs n, object o);
    void visit(action_segment n, object o);
    void visit(start_symbolList n, object o);
    void visit(terminalList n, object o);
    void visit(terminal n, object o);
    void visit(optTerminalAlias n, object o);
    void visit(type_declarationsList n, object o);
    void visit(type_declarations n, object o);
    void visit(symbol_pairList n, object o);
    void visit(symbol_pair n, object o);
    void visit(recover_symbol n, object o);
    void visit(END_KEY_OPT n, object o);
    void visit(option_value0 n, object o);
    void visit(option_value1 n, object o);
    void visit(aliasSpec0 n, object o);
    void visit(aliasSpec1 n, object o);
    void visit(aliasSpec2 n, object o);
    void visit(aliasSpec3 n, object o);
    void visit(aliasSpec4 n, object o);
    void visit(aliasSpec5 n, object o);
    void visit(alias_rhs0 n, object o);
    void visit(alias_rhs1 n, object o);
    void visit(alias_rhs2 n, object o);
    void visit(alias_rhs3 n, object o);
    void visit(alias_rhs4 n, object o);
    void visit(alias_rhs5 n, object o);
    void visit(alias_rhs6 n, object o);
    void visit(macro_name_symbol0 n, object o);
    void visit(macro_name_symbol1 n, object o);
    void visit(drop_command0 n, object o);
    void visit(drop_command1 n, object o);
    void visit(name0 n, object o);
    void visit(name1 n, object o);
    void visit(name2 n, object o);
    void visit(name3 n, object o);
    void visit(name4 n, object o);
    void visit(name5 n, object o);
    void visit(produces0 n, object o);
    void visit(produces1 n, object o);
    void visit(produces2 n, object o);
    void visit(produces3 n, object o);
    void visit(symWithAttrs0 n, object o);
    void visit(symWithAttrs1 n, object o);
    void visit(start_symbol0 n, object o);
    void visit(start_symbol1 n, object o);
    void visit(terminal_symbol0 n, object o);
    void visit(terminal_symbol1 n, object o);

    void visit(ASTNode n, object o);
}
}

